name: Copy Tekton Files for New Release

on:
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  copy-tekton-files:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout automation repository
      uses: actions/checkout@v3

    - name: Ensure repos.txt is in the directory
      run: ls -al  # List directory contents to verify repos.txt location

    - name: Fetch and Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git

    - name: Determine latest branch
      id: get_latest_branch
      run: |
        # Read repos.txt and find the latest branch for each repository
        while IFS= read -r repo_url; do
          repo_name=$(basename $repo_url .git)
          echo "Cloning repository: $repo_url"
          
          # Clone the repository
          git clone $repo_url
          cd $repo_name
          
          # Fetch all branches
          git fetch --all

          # Get the latest branch matching the pattern 'rhoai-x.y'
          latest_branch=$(git branch -r | grep -o 'origin/rhoai-[0-9]*\.[0-9]*' | sed 's/origin\///' | sort -V | tail -n 1)

          if [ -z "$latest_branch" ]; then
            echo "No branches matching 'rhoai-x.y' found in $repo_name."
            cd ..
            rm -rf $repo_name
            continue
          fi

          echo "Latest branch in $repo_name: $latest_branch"

          # Derive the new branch name
          MAJOR=$(echo $latest_branch | cut -d. -f1 | sed 's/rhoai-//')
          MINOR=$(echo $latest_branch | cut -d. -f2)
          NEW_MINOR=$((MINOR+1))
          NEW_BRANCH="rhoai-${MAJOR}.${NEW_MINOR}"

          # Check out the latest branch
          git checkout $latest_branch

          # Copy Tekton files
          cp -r tekton/ ../tekton_copy/

          # Replace version names in Tekton files
          cd ../tekton_copy/
          find . -type f -exec sed -i "s/${latest_branch}/${NEW_BRANCH}/g" {} +
          
          # Create a new branch and apply changes
          cd ../$repo_name
          git checkout -b $NEW_BRANCH
          mv ../tekton_copy/* ./tekton/
          git add .
          git commit -m "Copy Tekton files from $latest_branch to $NEW_BRANCH"
          git push origin $NEW_BRANCH
          
          # Disable Bundle Nudging (adding the on-cel rule)
          sed -i '/bundle.manifests\/rhods-operator.clusterserviceversion.yml/a && !”bundle\/manifests\/rhods-operator.clusterserviceversion.yml”.pathChanged()' .github/workflows/bundle-push.yml
          git add .github/workflows/bundle-push.yml
          git commit -m "Disable bundle nudging for $NEW_BRANCH"
          git push origin $NEW_BRANCH

          cd ..
          rm -rf $repo_name  # Clean up for the next repository
        done < repos.txt
