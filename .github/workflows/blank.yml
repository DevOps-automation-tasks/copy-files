name: Copy Tekton Files for New Release

on:
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  copy-tekton-files:
    runs-on: ubuntu-latest
    steps:
    - name: Read repos from file
      id: read_repos
      run: |
        # Read the repos from the repos.txt file
        REPOS=$(cat repos.txt)
        echo "REPOS=$REPOS" >> $GITHUB_ENV

    - name: Iterate over repos
      run: |
        # Set the new version (or take it as input)
        NEW_VERSION="2.13"  # Set manually or pass as input

        # Parse the major and minor versions
        MAJOR=$(echo $NEW_VERSION | cut -d. -f1)
        MINOR=$(echo $NEW_VERSION | cut -d. -f2)

        # Decrement the minor version for the previous branch
        PREVIOUS_MINOR=$((MINOR-1))
        PREVIOUS_VERSION="$MAJOR.$PREVIOUS_MINOR"

        # Set branch names
        PREVIOUS_BRANCH="rhoai-${PREVIOUS_VERSION}"
        NEW_BRANCH="rhoai-${NEW_VERSION}"

        echo "Processing repositories with new branch: $NEW_BRANCH"
        echo "Previous branch: $PREVIOUS_BRANCH"

        # Loop through each repository and perform the required operations
        for repo in ${{ env.REPOS }}; do
          echo "Cloning repository: $repo"
          
          # Clone the repository
          git clone https://github.com/organization-name/$repo.git
          cd $repo
          
          # Fetch all branches
          git fetch --all

          # Check if the previous branch exists
          if git show-ref --verify --quiet "refs/heads/${PREVIOUS_BRANCH}"; then
            git checkout $PREVIOUS_BRANCH
          else
            echo "Previous branch $PREVIOUS_BRANCH does not exist for $repo. Skipping."
            cd ..
            rm -rf $repo
            continue
          fi
          
          # Copy Tekton files
          cp -r tekton/ ../tekton_copy/

          # Replace version names in Tekton files
          cd ../tekton_copy/
          find . -type f -exec sed -i "s/${PREVIOUS_BRANCH}/${NEW_BRANCH}/g" {} +
          
          # Create a new branch and apply changes
          cd ../$repo
          git checkout -b $NEW_BRANCH
          mv ../tekton_copy/* ./tekton/
          git add .
          git commit -m "Copy Tekton files from $PREVIOUS_BRANCH to $NEW_BRANCH"
          git push origin $NEW_BRANCH
          
          # Disable Bundle Nudging (adding the on-cel rule)
          sed -i '/bundle.manifests\/rhods-operator.clusterserviceversion.yml/a && !”bundle\/manifests\/rhods-operator.clusterserviceversion.yml”.pathChanged()' .github/workflows/bundle-push.yml
          git add .github/workflows/bundle-push.yml
          git commit -m "Disable bundle nudging for $NEW_BRANCH"
          git push origin $NEW_BRANCH

          cd ..
          rm -rf $repo  # Clean up for the next repository
        done
